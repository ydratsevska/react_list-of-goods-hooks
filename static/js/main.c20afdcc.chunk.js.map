{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","DEFAULT_FIELD","sortType","setSortType","isReversed","setIsReversed","isSorted","sortedGoods","goods","preparedGoods","sort","good1","good2","BY_ALPHABET","localeCompare","BY_LENGTH","length","reverse","getPreparedGoods","className","onClick","type","cn","reversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAOKA,E,oFAAAA,K,uBAAAA,E,mBAAAA,E,kBAAAA,M,KAME,IAAMC,EAAyB,CACpC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgCWC,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,eAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAWJ,GAAYE,EAEvBG,EAnCiB,SACvBC,EACAN,EACAE,GAEA,IAAMK,EAAa,YAAOD,GAqB1B,OAnBIN,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKL,EAASgB,YACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,UACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXZ,GACFK,EAAcQ,UAGTR,EASaS,CAClBpB,EACAI,EACAE,GAQF,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMjB,EAAYN,EAASgB,cACpCQ,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYpB,IAAaL,EAASgB,cAJtC,iCAUA,wBACEO,QAAS,kBAAMjB,EAAYN,EAASkB,YACpCM,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYpB,IAAaL,EAASkB,YAJtC,4BAUA,wBACEK,QAAS,kBAAMf,GAAc,SAAAkB,GAAQ,OAAKA,MAC1CF,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAalB,IAJjB,qBAUCE,GAEG,wBACEc,QAAS,kBAxCnBjB,EAAYN,EAASI,oBACrBI,GAAc,IAwCJgB,KAAK,SACLF,UAAU,4BAHZ,sBAUN,6BACGZ,EAAYiB,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCpHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c20afdcc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\ntype Goods = string[];\n\nenum SortType {\n  BY_ALPHABET = 'alphabet',\n  BY_LENGTH = 'length',\n  DEFAULT_FIELD = '',\n}\n\nexport const goodsFromServer: Goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst getPreparedGoods = (\n  goods: Goods,\n  sortType: SortType,\n  isReversed: boolean,\n) => {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.DEFAULT_FIELD);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const isSorted = sortType || isReversed;\n\n  const sortedGoods = getPreparedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const handleReset = () => {\n    setSortType(SortType.DEFAULT_FIELD);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SortType.BY_ALPHABET)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortType !== SortType.BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SortType.BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType !== SortType.BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(reversed => !reversed)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {isSorted\n          && (\n            <button\n              onClick={() => handleReset()}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}